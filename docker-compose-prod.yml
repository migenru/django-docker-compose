# docker-compose for production

version: '3.3'

volumes:
  postgres_data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /start.sh
    entrypoint: /entrypoint.sh
    restart: always
    env_file: .env
    ports:
      - "${CUSTOM_PORT}:8000"
  
  postgres:
    image: postgres:12.6-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/static/:/static/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro


#  redis:
#    image: library/redis:5.0-alpine
#    restart: unless-stopped
#
#
#  celery_worker:
#    build:
#      context: ./backend
#    command: celery -A project worker -l info
#    env_file: .env
#    volumes:
#      - ./backend:/app
#    restart: unless-stopped
#    depends_on:
#      - backend
#      - redis
#
#
#  celery_beat:
#    build:
#      context: ./backend
#    command: celery -A project beat -l info
#    env_file: .env
#    volumes:
#      - ./backend:/app
#    restart: unless-stopped
#    depends_on:
#      - backend
#      - redis